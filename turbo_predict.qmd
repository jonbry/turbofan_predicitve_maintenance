---
title: "RUL Model Evaluation"
format: html
editor: visual
---

```{r}
rm(list=ls())
library(tidyverse)
library(psych)
```

### Import Data

```{r}
# Import Data
df_fd001 <- read_delim('~/Documents/turbofan_predicitve_maintenance/CMaps/train_FD001.txt', delim = ' ', col_names = FALSE) 

df_fd001 <- 
  df_fd001 %>%
  select(1:26)

```

### Add names for variables

```{r}
# Variable known names
vari <- c('unit', 'time', 'ops1', 'ops2', 'ops3')

# Add names for sensors
for (i in 1:23){
   vari <- append(vari, paste('sen', i, sep = ''))
}

# Change variable names
colnames(df_fd001) <- vari
  
```

### EDA

There should be 100 engines in the train_FD001 data set.

```{r}
n_distinct(df_fd001$unit)
```

#### Summary Statistics

#### Units, Time and Operation Settings (ops)

```{r}
sumstat1 <- describe(df_fd001[1:5]) %>%
  select(1, n, mean, sd, median, min, max)
print(sumstat1, digits = 4)
```

**Sensors**

```{r}
sumstat2 <- describe(df_fd001[-(1:5)]) %>%
  select( n, mean, sd, median, min, max)
print(sumstat2, digits = 4)
```

The sensors `sen1`, `sen5`, `sen10`, `sen16`, `sen18`, and `sen19` appear to have the same standard deviation across all rows, and can likely be excluded from the model.

### Estimate Remaining Useful Life (RUL)

The goal of this project is to predict the RUL cycles for engines after their last recorded cycle. Without knowing the relationship between number of cycles and system failure, we'll assume that the relationship is linear. We first should look to see what the maximum number of cycles for each engine:

```{r}
df_fd001 %>%
  group_by(unit) %>%
  reframe(max_cycle = max(time)) %>%
  ggplot(aes(x = max_cycle)) +
  geom_histogram()

```
